
user  root;
worker_processes  auto;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
   use epoll;
    multi_accept on;
    worker_connections  102400;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #设置主机名哈希表的表项长度默认32|64|128
    server_names_hash_max_size 128;

    #设置请求缓存区大小，默认使用client_body_buffer_size来去读取header值；
    client_body_buffer_size 32k;
    large_client_header_buffers 4 32k;

    #定义最大允许上传文件大小
    client_max_body_size 1024m;

    #开启高效文件传输模式，对于普通应用设置为on，如果用来下载等应用磁盘IO中重负载应用，可设置为off，
    #以平衡磁盘与网络IO处理速度，降低系统的负载，注意把：图片显示不正常，把这个改为off.
    sendfile on;
    
    #防止网络阻塞
    tcp_nopush on;

    #长连接超时时间
    keepalive_timeout 120;
   
    #gzip模块设置
    gzip on;
    gzip_vary on;
    gzip_disable "MSIE[1-6]\.";
    gzip_proxied any;
    gzip_min_length 10240;
    gzip_comp_level 2;
    gzip_types text/plain text/css text/xml text/javascript  application/json application/x-javascript application/xml application/xml+rss; 

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    proxy_redirect off;
    proxy_set_header Host $http_host;
    proxy_set_header X-real-ip $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_connect_timeout 90s;
    proxy_send_timeout 90s;
    proxy_read_timeout 90s;
    proxy_buffer_size 16k;
    proxy_buffers   4 64k;
    proxy_busy_buffers_size 128k;
    proxy_temp_file_write_size 128k;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
	    '"$status" $body_bytes_sent "$http_referer" '
	    '"$http_user_agent" "$http_x_forwarded_for" '
	    '"$gzip_ratio" $request_time $bytes_sent $request_length';

    access_log  logs/access.log main;

#    proxy_temp_path   /home/cache/nginx/temp;
#    proxy_cache_path /home/cache/nginx/cache_temp levels=1:2 keys_zone=http_cache:500m inactive=30d max_size=10g;
    
   # upstream group1{
   #         server 192.168.199.129:9999;
   #	    server 192.168.199.132:9999;
   #	    server 192.168.199.130:9999;
   #	   # server 192.168.0.77:8081 max_fails=0 fail_timeout=10s; 
   # }
   # server {
   #     listen       80;
   #     server_name  192.168.199.130;
   #
   #     #charset koi8-r;
   #
   #     #access_log  logs/host.access.log  main;
   #
   #     location ~/group1/M00{
   #	    add_header Content-Disposition "attachment;filename=$arg_fileName";
   #	    proxy_next_upstream http_502 http_504 error timeout invalid_header;
   #	    proxy_cache http_cache;
   #	    proxy_cache_valid 200 304 12h;
   #	    proxy_cache_key $uri$is_args$args; 
   #         proxy_pass http://group1;
   #	    expires 30d;
   #     }

	#location ~/group2/M00{
	#    proxy_next_upstream http_502 http_504 error timeout invalid_header;
	#    proxy_cache http_cache;
	#    proxy_cache_valid 200 304 12h;
	#    proxy_cache_key $uri$is_args$args; 
        #    proxy_pass http://group2;
	#    expires 30d;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
    #    error_page   500 502 503 504  /50x.html;
    #    location = /50x.html {
    #        root   html;
    #    }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    #}


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    server {
        listen       9999;
        server_name  localhost;

        location / {
            root   html;
            index  index.html index.htm;
        }

        location ~/group1/M00 {
            root /home/data;
            ngx_fastdfs_module;
        }

        location = /50x.html {
            root   html;
        }
   }

}

